apiVersion: apps/v1
kind: Deployment
metadata:
  name: dm-web
  labels:
    app: dm-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dm-web
  template:
    metadata:
      labels:
        app: dm-web
    spec:
      containers:
        - name: dm-web
          image: ghcr.io/failuretoload/datamonster-web:latest
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: dm-web
spec:
  type: LoadBalancer # Public-facing service
  selector:
    app: dm-web
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dm-api
  labels:
    app: dm-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dm-api
  template:
    metadata:
      labels:
        app: dm-api
    spec:
      containers:
        - name: dm-api
          image: ghcr.io/failuretoload/datamonster-api:latest # Replace with your API image name
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: dm-api
spec:
  type: ClusterIP # Internal service
  selector:
    app: dm-api
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dm-records
  labels:
    app: dm-records
spec:
  serviceName: "dm-records"
  replicas: 1
  selector:
    matchLabels:
      app: dm-records
  template:
    metadata:
      labels:
        app: dm-records
    spec:
      containers:
        - name: dm-records
          image: postgres:16
          env:
            - name: POSTGRES_DB
              value: records
            - name: POSTGRES_USER
              value: app
            - name: POSTGRES_PASSWORD
              value: Password1
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: dm-records
spec:
  type: ClusterIP # Internal service
  selector:
    app: dm-records
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dm-web-to-dm-api
spec:
  podSelector:
    matchLabels:
      app: dm-api
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: dm-web
      ports:
        - protocol: TCP
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dm-api-to-dm-records
spec:
  podSelector:
    matchLabels:
      app: dm-records
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: dm-api
      ports:
        - protocol: TCP
          port: 5432
