name: Update Cluster

on:
  push:
    branches:
      - main
    paths:
      - "web/**"
      - "api/**"

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Determine Changed Files
        id: changes
        run: |
          git fetch origin main
          git diff --name-only origin/main...HEAD > changed_files.txt

      - name: Set Outputs for Changed Projects
        id: set-outputs
        run: |
          WEB_CHANGED=false
          API_CHANGED=false
          if grep -q '^web/' changed_files.txt; then WEB_CHANGED=true; fi
          if grep -q '^api/' changed_files.txt; then API_CHANGED=true; fi
          echo "WEB_CHANGED=${WEB_CHANGED}" >> $GITHUB_OUTPUT
          echo "API_CHANGED=${API_CHANGED}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: ${{ steps.set-outputs.outputs.WEB_CHANGED == 'true' || steps.set-outputs.outputs.API_CHANGED == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: ${{ steps.set-outputs.outputs.WEB_CHANGED == 'true' || steps.set-outputs.outputs.API_CHANGED == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Web Image
        if: ${{ steps.set-outputs.outputs.WEB_CHANGED == 'true' }}
        run: |
          docker build -t ghcr.io/your-org/datamonster-web:latest ./web
          docker push ghcr.io/your-org/datamonster-web:latest

      - name: Build and Push API Image
        if: ${{ steps.set-outputs.outputs.API_CHANGED == 'true' }}
        run: |
          docker build -t ghcr.io/your-org/datamonster-api:latest ./api
          docker push ghcr.io/your-org/datamonster-api:latest

  update_k8s:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DATAMONSTER_ACTIONS }}

      - name: Set up Kubernetes context
        run: |
          az aks get-credentials --resource-group datamonster --name dm-cluster --overwrite-existing

      - name: Update Web Deployment
        if: ${{ needs.build_and_push.outputs.WEB_CHANGED == 'true' }}
        run: |
          kubectl set image deployment/dm-web dm-web=ghcr.io/failuretoload/datamonster-web:latest -n datamonster
          kubectl rollout status deployment/dm-web -n datamonster

      - name: Update API Deployment
        if: ${{ needs.build_and_push.outputs.API_CHANGED == 'true' }}
        run: |
          kubectl set image deployment/dm-api dm-api=ghcr.io/failuretoload/datamonster-api:latest -n datamonster
          kubectl rollout status deployment/dm-api -n datamonster
