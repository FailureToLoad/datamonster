// Code generated by ent, DO NOT EDIT.

package survivor

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/failuretoload/datamonster/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldName, v))
}

// Born applies equality check predicate on the "born" field. It's identical to BornEQ.
func Born(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldBorn, v))
}

// Huntxp applies equality check predicate on the "huntxp" field. It's identical to HuntxpEQ.
func Huntxp(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldHuntxp, v))
}

// Survival applies equality check predicate on the "survival" field. It's identical to SurvivalEQ.
func Survival(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSurvival, v))
}

// Movement applies equality check predicate on the "movement" field. It's identical to MovementEQ.
func Movement(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldMovement, v))
}

// Accuracy applies equality check predicate on the "accuracy" field. It's identical to AccuracyEQ.
func Accuracy(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldAccuracy, v))
}

// Strength applies equality check predicate on the "strength" field. It's identical to StrengthEQ.
func Strength(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldStrength, v))
}

// Evasion applies equality check predicate on the "evasion" field. It's identical to EvasionEQ.
func Evasion(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldEvasion, v))
}

// Luck applies equality check predicate on the "luck" field. It's identical to LuckEQ.
func Luck(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldLuck, v))
}

// Speed applies equality check predicate on the "speed" field. It's identical to SpeedEQ.
func Speed(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSpeed, v))
}

// Systemicpressure applies equality check predicate on the "systemicpressure" field. It's identical to SystemicpressureEQ.
func Systemicpressure(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSystemicpressure, v))
}

// Torment applies equality check predicate on the "torment" field. It's identical to TormentEQ.
func Torment(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldTorment, v))
}

// Insanity applies equality check predicate on the "insanity" field. It's identical to InsanityEQ.
func Insanity(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldInsanity, v))
}

// Lumi applies equality check predicate on the "lumi" field. It's identical to LumiEQ.
func Lumi(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldLumi, v))
}

// Courage applies equality check predicate on the "courage" field. It's identical to CourageEQ.
func Courage(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldCourage, v))
}

// Understanding applies equality check predicate on the "understanding" field. It's identical to UnderstandingEQ.
func Understanding(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldUnderstanding, v))
}

// StatusChangeYear applies equality check predicate on the "status_change_year" field. It's identical to StatusChangeYearEQ.
func StatusChangeYear(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldStatusChangeYear, v))
}

// SettlementID applies equality check predicate on the "settlement_id" field. It's identical to SettlementIDEQ.
func SettlementID(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSettlementID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Survivor {
	return predicate.Survivor(sql.FieldContainsFold(FieldName, v))
}

// BornEQ applies the EQ predicate on the "born" field.
func BornEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldBorn, v))
}

// BornNEQ applies the NEQ predicate on the "born" field.
func BornNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldBorn, v))
}

// BornIn applies the In predicate on the "born" field.
func BornIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldBorn, vs...))
}

// BornNotIn applies the NotIn predicate on the "born" field.
func BornNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldBorn, vs...))
}

// BornGT applies the GT predicate on the "born" field.
func BornGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldBorn, v))
}

// BornGTE applies the GTE predicate on the "born" field.
func BornGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldBorn, v))
}

// BornLT applies the LT predicate on the "born" field.
func BornLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldBorn, v))
}

// BornLTE applies the LTE predicate on the "born" field.
func BornLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldBorn, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v Gender) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v Gender) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...Gender) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...Gender) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldGender, vs...))
}

// HuntxpEQ applies the EQ predicate on the "huntxp" field.
func HuntxpEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldHuntxp, v))
}

// HuntxpNEQ applies the NEQ predicate on the "huntxp" field.
func HuntxpNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldHuntxp, v))
}

// HuntxpIn applies the In predicate on the "huntxp" field.
func HuntxpIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldHuntxp, vs...))
}

// HuntxpNotIn applies the NotIn predicate on the "huntxp" field.
func HuntxpNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldHuntxp, vs...))
}

// HuntxpGT applies the GT predicate on the "huntxp" field.
func HuntxpGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldHuntxp, v))
}

// HuntxpGTE applies the GTE predicate on the "huntxp" field.
func HuntxpGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldHuntxp, v))
}

// HuntxpLT applies the LT predicate on the "huntxp" field.
func HuntxpLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldHuntxp, v))
}

// HuntxpLTE applies the LTE predicate on the "huntxp" field.
func HuntxpLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldHuntxp, v))
}

// SurvivalEQ applies the EQ predicate on the "survival" field.
func SurvivalEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSurvival, v))
}

// SurvivalNEQ applies the NEQ predicate on the "survival" field.
func SurvivalNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldSurvival, v))
}

// SurvivalIn applies the In predicate on the "survival" field.
func SurvivalIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldSurvival, vs...))
}

// SurvivalNotIn applies the NotIn predicate on the "survival" field.
func SurvivalNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldSurvival, vs...))
}

// SurvivalGT applies the GT predicate on the "survival" field.
func SurvivalGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldSurvival, v))
}

// SurvivalGTE applies the GTE predicate on the "survival" field.
func SurvivalGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldSurvival, v))
}

// SurvivalLT applies the LT predicate on the "survival" field.
func SurvivalLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldSurvival, v))
}

// SurvivalLTE applies the LTE predicate on the "survival" field.
func SurvivalLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldSurvival, v))
}

// MovementEQ applies the EQ predicate on the "movement" field.
func MovementEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldMovement, v))
}

// MovementNEQ applies the NEQ predicate on the "movement" field.
func MovementNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldMovement, v))
}

// MovementIn applies the In predicate on the "movement" field.
func MovementIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldMovement, vs...))
}

// MovementNotIn applies the NotIn predicate on the "movement" field.
func MovementNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldMovement, vs...))
}

// MovementGT applies the GT predicate on the "movement" field.
func MovementGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldMovement, v))
}

// MovementGTE applies the GTE predicate on the "movement" field.
func MovementGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldMovement, v))
}

// MovementLT applies the LT predicate on the "movement" field.
func MovementLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldMovement, v))
}

// MovementLTE applies the LTE predicate on the "movement" field.
func MovementLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldMovement, v))
}

// AccuracyEQ applies the EQ predicate on the "accuracy" field.
func AccuracyEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldAccuracy, v))
}

// AccuracyNEQ applies the NEQ predicate on the "accuracy" field.
func AccuracyNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldAccuracy, v))
}

// AccuracyIn applies the In predicate on the "accuracy" field.
func AccuracyIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldAccuracy, vs...))
}

// AccuracyNotIn applies the NotIn predicate on the "accuracy" field.
func AccuracyNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldAccuracy, vs...))
}

// AccuracyGT applies the GT predicate on the "accuracy" field.
func AccuracyGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldAccuracy, v))
}

// AccuracyGTE applies the GTE predicate on the "accuracy" field.
func AccuracyGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldAccuracy, v))
}

// AccuracyLT applies the LT predicate on the "accuracy" field.
func AccuracyLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldAccuracy, v))
}

// AccuracyLTE applies the LTE predicate on the "accuracy" field.
func AccuracyLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldAccuracy, v))
}

// StrengthEQ applies the EQ predicate on the "strength" field.
func StrengthEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldStrength, v))
}

// StrengthNEQ applies the NEQ predicate on the "strength" field.
func StrengthNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldStrength, v))
}

// StrengthIn applies the In predicate on the "strength" field.
func StrengthIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldStrength, vs...))
}

// StrengthNotIn applies the NotIn predicate on the "strength" field.
func StrengthNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldStrength, vs...))
}

// StrengthGT applies the GT predicate on the "strength" field.
func StrengthGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldStrength, v))
}

// StrengthGTE applies the GTE predicate on the "strength" field.
func StrengthGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldStrength, v))
}

// StrengthLT applies the LT predicate on the "strength" field.
func StrengthLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldStrength, v))
}

// StrengthLTE applies the LTE predicate on the "strength" field.
func StrengthLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldStrength, v))
}

// EvasionEQ applies the EQ predicate on the "evasion" field.
func EvasionEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldEvasion, v))
}

// EvasionNEQ applies the NEQ predicate on the "evasion" field.
func EvasionNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldEvasion, v))
}

// EvasionIn applies the In predicate on the "evasion" field.
func EvasionIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldEvasion, vs...))
}

// EvasionNotIn applies the NotIn predicate on the "evasion" field.
func EvasionNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldEvasion, vs...))
}

// EvasionGT applies the GT predicate on the "evasion" field.
func EvasionGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldEvasion, v))
}

// EvasionGTE applies the GTE predicate on the "evasion" field.
func EvasionGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldEvasion, v))
}

// EvasionLT applies the LT predicate on the "evasion" field.
func EvasionLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldEvasion, v))
}

// EvasionLTE applies the LTE predicate on the "evasion" field.
func EvasionLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldEvasion, v))
}

// LuckEQ applies the EQ predicate on the "luck" field.
func LuckEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldLuck, v))
}

// LuckNEQ applies the NEQ predicate on the "luck" field.
func LuckNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldLuck, v))
}

// LuckIn applies the In predicate on the "luck" field.
func LuckIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldLuck, vs...))
}

// LuckNotIn applies the NotIn predicate on the "luck" field.
func LuckNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldLuck, vs...))
}

// LuckGT applies the GT predicate on the "luck" field.
func LuckGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldLuck, v))
}

// LuckGTE applies the GTE predicate on the "luck" field.
func LuckGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldLuck, v))
}

// LuckLT applies the LT predicate on the "luck" field.
func LuckLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldLuck, v))
}

// LuckLTE applies the LTE predicate on the "luck" field.
func LuckLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldLuck, v))
}

// SpeedEQ applies the EQ predicate on the "speed" field.
func SpeedEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSpeed, v))
}

// SpeedNEQ applies the NEQ predicate on the "speed" field.
func SpeedNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldSpeed, v))
}

// SpeedIn applies the In predicate on the "speed" field.
func SpeedIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldSpeed, vs...))
}

// SpeedNotIn applies the NotIn predicate on the "speed" field.
func SpeedNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldSpeed, vs...))
}

// SpeedGT applies the GT predicate on the "speed" field.
func SpeedGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldSpeed, v))
}

// SpeedGTE applies the GTE predicate on the "speed" field.
func SpeedGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldSpeed, v))
}

// SpeedLT applies the LT predicate on the "speed" field.
func SpeedLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldSpeed, v))
}

// SpeedLTE applies the LTE predicate on the "speed" field.
func SpeedLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldSpeed, v))
}

// SystemicpressureEQ applies the EQ predicate on the "systemicpressure" field.
func SystemicpressureEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSystemicpressure, v))
}

// SystemicpressureNEQ applies the NEQ predicate on the "systemicpressure" field.
func SystemicpressureNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldSystemicpressure, v))
}

// SystemicpressureIn applies the In predicate on the "systemicpressure" field.
func SystemicpressureIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldSystemicpressure, vs...))
}

// SystemicpressureNotIn applies the NotIn predicate on the "systemicpressure" field.
func SystemicpressureNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldSystemicpressure, vs...))
}

// SystemicpressureGT applies the GT predicate on the "systemicpressure" field.
func SystemicpressureGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldSystemicpressure, v))
}

// SystemicpressureGTE applies the GTE predicate on the "systemicpressure" field.
func SystemicpressureGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldSystemicpressure, v))
}

// SystemicpressureLT applies the LT predicate on the "systemicpressure" field.
func SystemicpressureLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldSystemicpressure, v))
}

// SystemicpressureLTE applies the LTE predicate on the "systemicpressure" field.
func SystemicpressureLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldSystemicpressure, v))
}

// TormentEQ applies the EQ predicate on the "torment" field.
func TormentEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldTorment, v))
}

// TormentNEQ applies the NEQ predicate on the "torment" field.
func TormentNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldTorment, v))
}

// TormentIn applies the In predicate on the "torment" field.
func TormentIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldTorment, vs...))
}

// TormentNotIn applies the NotIn predicate on the "torment" field.
func TormentNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldTorment, vs...))
}

// TormentGT applies the GT predicate on the "torment" field.
func TormentGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldTorment, v))
}

// TormentGTE applies the GTE predicate on the "torment" field.
func TormentGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldTorment, v))
}

// TormentLT applies the LT predicate on the "torment" field.
func TormentLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldTorment, v))
}

// TormentLTE applies the LTE predicate on the "torment" field.
func TormentLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldTorment, v))
}

// InsanityEQ applies the EQ predicate on the "insanity" field.
func InsanityEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldInsanity, v))
}

// InsanityNEQ applies the NEQ predicate on the "insanity" field.
func InsanityNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldInsanity, v))
}

// InsanityIn applies the In predicate on the "insanity" field.
func InsanityIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldInsanity, vs...))
}

// InsanityNotIn applies the NotIn predicate on the "insanity" field.
func InsanityNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldInsanity, vs...))
}

// InsanityGT applies the GT predicate on the "insanity" field.
func InsanityGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldInsanity, v))
}

// InsanityGTE applies the GTE predicate on the "insanity" field.
func InsanityGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldInsanity, v))
}

// InsanityLT applies the LT predicate on the "insanity" field.
func InsanityLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldInsanity, v))
}

// InsanityLTE applies the LTE predicate on the "insanity" field.
func InsanityLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldInsanity, v))
}

// LumiEQ applies the EQ predicate on the "lumi" field.
func LumiEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldLumi, v))
}

// LumiNEQ applies the NEQ predicate on the "lumi" field.
func LumiNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldLumi, v))
}

// LumiIn applies the In predicate on the "lumi" field.
func LumiIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldLumi, vs...))
}

// LumiNotIn applies the NotIn predicate on the "lumi" field.
func LumiNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldLumi, vs...))
}

// LumiGT applies the GT predicate on the "lumi" field.
func LumiGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldLumi, v))
}

// LumiGTE applies the GTE predicate on the "lumi" field.
func LumiGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldLumi, v))
}

// LumiLT applies the LT predicate on the "lumi" field.
func LumiLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldLumi, v))
}

// LumiLTE applies the LTE predicate on the "lumi" field.
func LumiLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldLumi, v))
}

// CourageEQ applies the EQ predicate on the "courage" field.
func CourageEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldCourage, v))
}

// CourageNEQ applies the NEQ predicate on the "courage" field.
func CourageNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldCourage, v))
}

// CourageIn applies the In predicate on the "courage" field.
func CourageIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldCourage, vs...))
}

// CourageNotIn applies the NotIn predicate on the "courage" field.
func CourageNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldCourage, vs...))
}

// CourageGT applies the GT predicate on the "courage" field.
func CourageGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldCourage, v))
}

// CourageGTE applies the GTE predicate on the "courage" field.
func CourageGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldCourage, v))
}

// CourageLT applies the LT predicate on the "courage" field.
func CourageLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldCourage, v))
}

// CourageLTE applies the LTE predicate on the "courage" field.
func CourageLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldCourage, v))
}

// UnderstandingEQ applies the EQ predicate on the "understanding" field.
func UnderstandingEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldUnderstanding, v))
}

// UnderstandingNEQ applies the NEQ predicate on the "understanding" field.
func UnderstandingNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldUnderstanding, v))
}

// UnderstandingIn applies the In predicate on the "understanding" field.
func UnderstandingIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldUnderstanding, vs...))
}

// UnderstandingNotIn applies the NotIn predicate on the "understanding" field.
func UnderstandingNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldUnderstanding, vs...))
}

// UnderstandingGT applies the GT predicate on the "understanding" field.
func UnderstandingGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldUnderstanding, v))
}

// UnderstandingGTE applies the GTE predicate on the "understanding" field.
func UnderstandingGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldUnderstanding, v))
}

// UnderstandingLT applies the LT predicate on the "understanding" field.
func UnderstandingLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldUnderstanding, v))
}

// UnderstandingLTE applies the LTE predicate on the "understanding" field.
func UnderstandingLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldUnderstanding, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusChangeYearEQ applies the EQ predicate on the "status_change_year" field.
func StatusChangeYearEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldStatusChangeYear, v))
}

// StatusChangeYearNEQ applies the NEQ predicate on the "status_change_year" field.
func StatusChangeYearNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldStatusChangeYear, v))
}

// StatusChangeYearIn applies the In predicate on the "status_change_year" field.
func StatusChangeYearIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldStatusChangeYear, vs...))
}

// StatusChangeYearNotIn applies the NotIn predicate on the "status_change_year" field.
func StatusChangeYearNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldStatusChangeYear, vs...))
}

// StatusChangeYearGT applies the GT predicate on the "status_change_year" field.
func StatusChangeYearGT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGT(FieldStatusChangeYear, v))
}

// StatusChangeYearGTE applies the GTE predicate on the "status_change_year" field.
func StatusChangeYearGTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldGTE(FieldStatusChangeYear, v))
}

// StatusChangeYearLT applies the LT predicate on the "status_change_year" field.
func StatusChangeYearLT(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLT(FieldStatusChangeYear, v))
}

// StatusChangeYearLTE applies the LTE predicate on the "status_change_year" field.
func StatusChangeYearLTE(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldLTE(FieldStatusChangeYear, v))
}

// SettlementIDEQ applies the EQ predicate on the "settlement_id" field.
func SettlementIDEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldEQ(FieldSettlementID, v))
}

// SettlementIDNEQ applies the NEQ predicate on the "settlement_id" field.
func SettlementIDNEQ(v int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNEQ(FieldSettlementID, v))
}

// SettlementIDIn applies the In predicate on the "settlement_id" field.
func SettlementIDIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldIn(FieldSettlementID, vs...))
}

// SettlementIDNotIn applies the NotIn predicate on the "settlement_id" field.
func SettlementIDNotIn(vs ...int) predicate.Survivor {
	return predicate.Survivor(sql.FieldNotIn(FieldSettlementID, vs...))
}

// SettlementIDIsNil applies the IsNil predicate on the "settlement_id" field.
func SettlementIDIsNil() predicate.Survivor {
	return predicate.Survivor(sql.FieldIsNull(FieldSettlementID))
}

// SettlementIDNotNil applies the NotNil predicate on the "settlement_id" field.
func SettlementIDNotNil() predicate.Survivor {
	return predicate.Survivor(sql.FieldNotNull(FieldSettlementID))
}

// HasSettlement applies the HasEdge predicate on the "settlement" edge.
func HasSettlement() predicate.Survivor {
	return predicate.Survivor(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, SettlementTable, SettlementColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSettlementWith applies the HasEdge predicate on the "settlement" edge with a given conditions (other predicates).
func HasSettlementWith(preds ...predicate.Settlement) predicate.Survivor {
	return predicate.Survivor(func(s *sql.Selector) {
		step := newSettlementStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Survivor) predicate.Survivor {
	return predicate.Survivor(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Survivor) predicate.Survivor {
	return predicate.Survivor(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Survivor) predicate.Survivor {
	return predicate.Survivor(sql.NotPredicates(p))
}
